##Perl Program 2 to filter out nocoding transcript from coding transcript after the blastn against the ###Rfam, UTR and miRNA databases.
 ###“list_ids.txt” should contain the sequence ids having hits against the above mentioned database
# Usage: RetrieveidsFasta_file.pl <Sequence.fasta> <list_ids.txt>
use strict;
use warnings;
open(OUT,'>sequence_present.fasta'); ## ids present in the Sequence.fasta
open(NOUT,'>sequence_absent.fasta'); ## ids absent in the Sequence.fasta

# Input parameters

########################################
my $scaffold_file = $ARGV[0];
my $query = $ARGV[1];
# Save wanted fasta headers
my %list=();
open(IN, $query);
	while(<IN>) 
	{
		chomp($_);
		$_=~m/^>/;
                $_=~s/>//g;
		$_=~s/\s+//g;
		#print "$_\n";
		$list{$_} = '1';
	}

my @data=keys %list;
for(my $j=1;$j<=$#data;$j++)
{
#print OUT "list length($data[$j])\t";
}
#######################################################
open(IN2, $scaffold_file);
my $flag = 0;
 
while(<IN2>)
 { 
    chomp($_);
    if($_=~ m/^>/)
	{   
	  my $seq_head=$_;
	  
           my @seq_head1=split(' ',$seq_head);
            my $seq_id=$seq_head1[0];
	   $seq_id=~s/>//g;
	   $seq_id=~s/\s+//g;
	   
           #print "\n";
	   #print NOUT length($seq_id);
	   		if(defined $list{$seq_id})
				  {     
					#print $_;
					print OUT "$_\n";
					$flag = 1;
				   }
					else
					{
					$flag = 0;
					print NOUT $_;
					}					
	
					
	}
		
	else 
	{
				if($flag eq 1)
				{ 
				        # print 
				 	 print OUT "$_\n";   
### print all those ids whcih are present
				 }	 
 	if($flag eq 0) 
       {

             print NOUT "$_\n";
      
      }
	       
	}
	
  			
}			

